{
    "scope": "source.php - variable.other.php",

    "completions":
    [
        //预定义常量
        "URL_COMMON",
        "URL_PATHINFO",
        "URL_REWRITE",
        "URL_COMPAT",
        "HAS_ONE",
        "BELONGS_TO",
        "HAS_MANY",
        "MANY_TO_MANY",
        "THINK_VERSION",
        //路径常量
        "CORE_PATH",
        "EXTEND_PATH",
        "MODE_PATH",
        "ENGINE_PATH",
        "VENDOR_PATH",
        "LIBRARY_PATH",
        "COMMON_PATH",
        "LIB_PATH",
        "RUNTIME_PATH",
        "CONF_PATH",
        "LOG_PATH",
        "CACHE_PATH",
        "LANG_PATH",
        "TEMP_PATH",
        "DATA_PATH",
        "TMPL_PATH",
        "HTML_PATH",
        //系统常量
        "IS_CGI",
        "IS_WIN",
        "IS_CLI",
        "__ROOT__",
        "__APP__",
        "__GROUP__",
        "__URL__",
        "__ACTION__",
        "__SELF__",
        "__INFO__",
        "APP_NAME",
        "GROUP_NAME",
        "MODULE_NAME",
        "CONTROLLER_NAME",
        "ACTION_NAME",
        "APP_DEBUG",
        "MODE_NAME",
        "APP_PATH",
        "THINK_PATH",
        "MEMORY_LIMIT_ON",
        "RUNTIME_FILE",
        "THEME_NAME",
        "THEME_PATH",
        "APP_TMPL_PATH",
        "LANG_SET",
        "MAGIC_QUOTES_GPC",
        "APP_STATUS",
        // 自定义常量
        "IS_APP",
        //项目中C函数默认获取到的配置键名
        "APP_FILE_CASE",
        "APP_AUTOLOAD_PATH",
        "APP_TAGS_ON",
        "APP_SUB_DOMAIN_DEPLOY",
        "APP_SUB_DOMAIN_RULES",
        "APP_SUB_DOMAIN_DENY",
        "APP_GROUP_LIST",
        "APP_GROUP_MODE",
        "APP_GROUP_PATH",
        "ACTION_SUFFIX",
        "COOKIE_EXPIRE",
        "COOKIE_DOMAIN",
        "COOKIE_PATH",
        "COOKIE_PREFIX",
        "DEFAULT_M_LAYER",
        "DEFAULT_C_LAYER",
        "DEFAULT_APP",
        "DEFAULT_LANG",
        "DEFAULT_THEME",
        "DEFAULT_GROUP",
        "DEFAULT_MODULE",
        "DEFAULT_ACTION",
        "DEFAULT_CHARSET",
        "DEFAULT_TIMEZONE",
        "DEFAULT_AJAX_RETURN",
        "DEFAULT_JSONP_HANDLER",
        "DEFAULT_FILTER",
        "DB_TYPE",
        "DB_HOST",
        "DB_NAME",
        "DB_USER",
        "DB_PWD",
        "DB_PORT",
        "DB_PREFIX",
        "DB_FIELDTYPE_CHECK",
        "DB_FIELDS_CACHE",
        "DB_CHARSET",
        "DB_DEPLOY_TYPE",
        "DB_RW_SEPARATE",
        "DB_MASTER_NUM",
        "DB_SLAVE_NO",
        "DB_SQL_BUILD_CACHE",
        "DB_SQL_BUILD_QUEUE",
        "DB_SQL_BUILD_LENGTH",
        "DB_SQL_LOG",
        "DATA_CACHE_TIME",
        "DATA_CACHE_COMPRESS",
        "DATA_CACHE_CHECK",
        "DATA_CACHE_PREFIX",
        "DATA_CACHE_TYPE",
        "DATA_CACHE_PATH",
        "DATA_CACHE_SUBDIR",
        "DATA_PATH_LEVEL",
        "ERROR_MESSAGE",
        "ERROR_PAGE",
        "SHOW_ERROR_MSG",
        "TRACE_EXCEPTION",
        "LOG_RECORD",
        "LOG_TYPE",
        "LOG_DEST",
        "LOG_EXTRA",
        "LOG_LEVEL",
        "LOG_FILE_SIZE",
        "LOG_EXCEPTION_RECORD",
        "SESSION_AUTO_START",
        "SESSION_OPTIONS",
        "SESSION_TYPE",
        "SESSION_PREFIX",
        "TMPL_CONTENT_TYPE",
        "TMPL_ACTION_ERROR",
        "TMPL_ACTION_SUCCESS",
        "TMPL_EXCEPTION_FILE",
        "TMPL_DETECT_THEME",
        "TMPL_TEMPLATE_SUFFIX",
        "TMPL_FILE_DEPR",
        "URL_CASE_INSENSITIVE",
        "URL_MODEL",
        "URL_PATHINFO_DEPR",
        "URL_PATHINFO_FETCH",
        "URL_HTML_SUFFIX",
        "URL_PARAMS_BIND",
        "URL_404_REDIRECT",
        "VAR_GROUP",
        "VAR_MODULE",
        "VAR_ACTION",
        "VAR_AJAX_SUBMIT",
        "VAR_JSONP_HANDLER",
        "VAR_PAGE",
        "VAR_PATHINFO",
        "VAR_URL_PARAMS",
        "VAR_TEMPLATE",
        "VAR_FILTERS",
        "OUTPUT_ENCODE",
        "HTTP_CACHE_CONTROL",
        "SHOW_PAGE_TRACE",
        "EXTENDS",
        "TMPL_CACHE_ON",
        "TMPL_STRIP_SPACE",
        "CACHE_PATH",
        "HTML_CACHE_ON",
        "HTML_CACHE_TIME",
        "HTML_CACHE_RULES",
        "HTML_FILE_SUFFIX",
        "TEMPLATE_NAME",
        // 其他

        // 控制器类操作
        { "trigger": "dump", "contents": "dump(${1:\\$data});${2:die;}$0" },
        { "trigger": "ajax_return", "contents": "ajax_return(${1:\\$data},'${2:error_message}',${3:'error_code'});$0" },
        { "trigger": "error", "contents": "\\$this->error('${1:name}');$0" },
        { "trigger": "success", "contents": "\\$this->success('${1:info}',U('${2:}'));$0" },
        { "trigger": "->ajaxReturn", "contents": "->ajaxReturn(${1:\\$data},${2:\\$info},${3:\\$status},${4:\\$type})$0" },
        { "trigger": "cookie", "contents": "cookie(${1:\\$name}${2:,\\$value}${3:,\\$option})$0" },
        { "trigger": "session", "contents": "session(${1:\\$name},${2:\\$value})$0" },
        { "trigger": "rand_string()", "contents": "rand_string(${1:})$0" },
        { "trigger": "rand_number()", "contents": "rand_number(${1:})$0" },
        { "trigger": "dis", "contents": "\\$this->display();$0" },
        { "trigger": "ass", "contents": "\\$assign=array(\n    '${1:data}'=>\\$${2:data}\n    );\n\\$this->assign(\\$assign);$0" },
        { "trigger": "p", "contents": "p(\\$${1:data});${2:die;}$0" },
        { "trigger": "c", "contents": "C('${1:configlName}','${2:value}');$0" },
        { "trigger": "d", "contents": "D('${1:modelName}')${2:->}$0" },
        { "trigger": "m", "contents": "M('${1:tableName}')${2:->}$0" },
        { "trigger": "di", "contents": "die;$0" },
        { "trigger": "redirect", "contents": "redirect(${1:\\$url}${2:,\\$time}${3:,\\$msg})$0" },
        { "trigger": "pub", "contents": "/**\n * ${1:ActionName}\n */\npublic function ${2:index}(){\n    $3\n    \\$this->display();\n}$0" },
        { "trigger": "map", "contents": "// 组合where数组条件\n\\$map=array(\n    '${1:id}'=>\\$${2:id}\n    );\n$0" },
        { "trigger": "post", "contents": "if(IS_POST){\n    ${1:}\n}else{\n    ${2:}\n    \\$this->display();\n}" },
        { "trigger": "check_login", "contents": "// 如果没有登录 \nif(!check_login()){\n    ${1:}\n}" },
        { "trigger": "is_student", "contents": "// 如果不是学霸 \nif(!is_student(${1:\\$uid})){\n    ${2:}\n}" },
        { "trigger": "app", "contents": "if(IS_APP){\n    ajax_return(${2:\\$data},'${3:error_message}',${4:'error_code'});\n}else{\n    ${5:}\n}"},
        { "trigger": "i", "contents": "I('${1:}')$0" },
        { "trigger": "pa", "contents": "p(\\$assign);${2:die;}$0" },
        { "trigger": "pp", "contents": "p(\\$_POST);${2:die;}$0" },
        { "trigger": "ps", "contents": "p(\\$_SESSION);${2:die;}$0" },
        // 模型类操作
        { "trigger": "this", "contents": "\\$this${1:\n    }$0" },
        { "trigger": "->field", "contents": "->field('${1:}')$0" },
        { "trigger": "->alias", "contents": "->alias('${1:}')$0" },
        { "trigger": "->join", "contents": "->join('${1:}')$0" },
        { "trigger": "->where", "contents": "->where(array('${1:key}'=>${2:value}))$0" },
        { "trigger": "->wheremap", "contents": "->where(\\$map)\n$0" },
        { "trigger": "->find", "contents": "->find();\n$0" },
        { "trigger": "->group", "contents": "->group('${1:}')$0" },
        { "trigger": "->order", "contents": "->order('${1:}')$0" },
        { "trigger": "->limit", "contents": "->limit(${1:})$0" },
        { "trigger": "->select", "contents": "->select();\n$0" },

        { "trigger": "->getBy", "contents": "->getBy${1:Field}('${2:value}');$0" },
        { "trigger": "->getField", "contents": "->getField('${1:field}'${2:,true});$0" },
        { "trigger": "->getFieldBy", "contents": "->getFieldBy${1:Id}(\\$${2:id},'${3:value}');$0" },
        { "trigger": "->getPage", "contents": "->getPage(\\$this,\\$${1:map},${2:\\$order},${3:\\$limit},${4:\\$field});$0" },
        { "trigger": "->getPageData", "contents": "->getPageData(\\$${1:map},${3:\\$limit});$0" },

        { "trigger": "->count", "contents": "->count();$0" },
        { "trigger": "->max()", "contents": "->max();$0" },
        { "trigger": "->min()", "contents": "->min();$0" },
        { "trigger": "->sum()", "contents": "->sum();$0" },
        { "trigger": "->avg()", "contents": "->avg();$0" },

        { "trigger": "->save", "contents": "->save(${1\\$data})$0" },
        { "trigger": "->setField()", "contents": "setField(\\$${1:field},\\$${2:value})$0" },
        { "trigger": "->setInc()", "contents": "setInc(\\$${1:field}${2:,\\$step})$0" },
        { "trigger": "->setDec()", "contents": "setDec(\\$${1:field}${2:,\\$step})$0" },

        { "trigger": "->delete", "contents": "->delete();$0" },

        { "trigger": "sql()", "contents": "p(\\$this->_sql());$0" },

        { "trigger": "m_val", "contents": "// 自动验证\nprotected \\$_validate=array(\n    array('verify','require','验证码必填！'), //默认情况下用正则进行验证\n    array('name','','帐号名称已经存在！',0,'unique',1), // 在新增的时候验证name字段是否唯一\n    array('value',array(1,2,3),'值的范围不正确！',2,'in'), // 当值不为空的时候判断是否在一个范围内\n    array('repassword','password','确认密码不正确',0,'confirm'), // 验证确认密码是否和密码一致\n    array('password','checkPwd','密码格式不正确',0,'function'), // 自定义函数验证密码格式\n);\n$0" },

        { "trigger": "m_auto", "contents": "// 自动完成\nprotected \\$_auto=array(\n    array('status',1),  // 新增的时候把status字段设置为1\n    array('password','md5',1,'function') , // 对password字段在新增的时候使md5函数处理\n    array('name','getName',1,'callback'), // 对name字段在新增的时候回调getName方法\n    array('date','time',1,'function'), // 对date字段在新增的时候写入当前时间戳\n);$0" },

        { "trigger": "create", "contents": "// 对data数据进行验证\nif(!\\$data=\\$this->create(\\$data)){\n    // 验证不通过返回错误\n    return false;\n}else{\n    // 验证通过\n    $1\n}$0" },
        { "trigger": "result", "contents": "if(\\$result){\n    // 操作成功\n    \\$this->success('${1:info}',U('${2:}'));$0\n}else{\n    // 操作失败\n    \\$this->error('${3:name}');\n}$0" },
        { "trigger": "->add", "contents": "->add(${1:\\$data});$0" },
        { "trigger": "->addData", "contents": "->addData(${1:\\$data});$0"},
        { "trigger": "->editData", "contents": "->editData(${1:\\$map},${2:\\$data});$0" },
        { "trigger": "->getDataBy", "contents": "->getDataBy${1:id}(${2:\\$id});$0" }
    ]
}
